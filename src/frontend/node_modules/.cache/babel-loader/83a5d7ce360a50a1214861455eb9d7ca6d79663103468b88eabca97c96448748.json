{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projetos\\\\FloodGuard\\\\src\\\\frontend\\\\src\\\\components\\\\LevelsChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useMemo } from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, ResponsiveContainer } from 'recharts';\nimport { fetchLevels } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LevelsChart() {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [startTime, setStartTime] = useState('');\n  const [endTime, setEndTime] = useState('');\n\n  // Função para buscar os dados do backend\n  const fetchData = async () => {\n    try {\n      const levels = await fetchLevels();\n      setData(levels);\n    } catch (error) {\n      console.error('Erro ao buscar níveis de água:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchData(); // Busca inicial\n    const interval = setInterval(fetchData, 5000); // Atualiza a cada 5s\n\n    return () => clearInterval(interval);\n  }, []);\n  const formattedData = useMemo(() => {\n    return data.filter(item => {\n      const ts = new Date(item.timestamp);\n      if (startTime && ts < new Date(startTime)) return false;\n      if (endTime && ts > new Date(endTime)) return false;\n      return true;\n    }).map(item => ({\n      time: new Date(item.timestamp).toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      }),\n      level: item.level_cm\n    }));\n  }, [data, startTime, endTime]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-2\",\n      children: \"N\\xEDveis de \\xC1gua\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex space-x-4 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm\",\n          children: \"In\\xEDcio:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"datetime-local\",\n          value: startTime,\n          onChange: e => setStartTime(e.target.value),\n          className: \"border p-1 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm\",\n          children: \"Fim:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"datetime-local\",\n          value: endTime,\n          onChange: e => setEndTime(e.target.value),\n          className: \"border p-1 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-72\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-16 h-16 border-4 border-blue-500 border-t-transparent rounded-full animate-spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: formattedData,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          label: {\n            value: 'Nível (cm)',\n            angle: -90,\n            position: 'insideLeft'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"level\",\n          stroke: \"#3b82f6\",\n          dot: {\n            r: 3\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(LevelsChart, \"MsGzvlRcZkJ68UHYci+wAY5dJWI=\");\n_c = LevelsChart;\nexport default LevelsChart;\nvar _c;\n$RefreshReg$(_c, \"LevelsChart\");","map":{"version":3,"names":["React","useEffect","useState","useMemo","LineChart","Line","XAxis","YAxis","Tooltip","CartesianGrid","ResponsiveContainer","fetchLevels","jsxDEV","_jsxDEV","LevelsChart","_s","data","setData","loading","setLoading","startTime","setStartTime","endTime","setEndTime","fetchData","levels","error","console","interval","setInterval","clearInterval","formattedData","filter","item","ts","Date","timestamp","map","time","toLocaleTimeString","hour","minute","level","level_cm","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","width","height","strokeDasharray","dataKey","label","angle","position","stroke","dot","r","_c","$RefreshReg$"],"sources":["C:/Projetos/FloodGuard/src/frontend/src/components/LevelsChart.jsx"],"sourcesContent":["import React, { useEffect, useState, useMemo } from 'react';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Tooltip,\n  CartesianGrid,\n  ResponsiveContainer\n} from 'recharts';\nimport { fetchLevels } from '../services/api';\n\nfunction LevelsChart() {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [startTime, setStartTime] = useState('');\n  const [endTime, setEndTime] = useState('');\n\n  // Função para buscar os dados do backend\n  const fetchData = async () => {\n    try {\n      const levels = await fetchLevels();\n      setData(levels);\n    } catch (error) {\n      console.error('Erro ao buscar níveis de água:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();                        // Busca inicial\n    const interval = setInterval(fetchData, 5000); // Atualiza a cada 5s\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const formattedData = useMemo(() => {\n    return data\n      .filter(item => {\n        const ts = new Date(item.timestamp);\n        if (startTime && ts < new Date(startTime)) return false;\n        if (endTime && ts > new Date(endTime)) return false;\n        return true;\n      })\n      .map(item => ({\n        time: new Date(item.timestamp)\n          .toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }),\n        level: item.level_cm,\n      }));\n  }, [data, startTime, endTime]);\n\n  return (\n    <div>\n      <h2 className=\"text-xl font-semibold mb-2\">Níveis de Água</h2>\n\n      {/* timeline filter inputs */}\n      <div className=\"flex space-x-4 mb-4\">\n        <div>\n          <label className=\"block text-sm\">Início:</label>\n          <input type=\"datetime-local\" value={startTime} onChange={e => setStartTime(e.target.value)} className=\"border p-1 rounded\" />\n        </div>\n        <div>\n          <label className=\"block text-sm\">Fim:</label>\n          <input type=\"datetime-local\" value={endTime} onChange={e => setEndTime(e.target.value)} className=\"border p-1 rounded\" />\n        </div>\n      </div>\n\n      {loading ? (\n        <div className=\"flex justify-center items-center h-72\">\n          <div className=\"w-16 h-16 border-4 border-blue-500 border-t-transparent rounded-full animate-spin\"></div>\n        </div>\n      ) : (\n        <ResponsiveContainer width=\"100%\" height={300}>\n          <LineChart data={formattedData}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"time\" />\n            <YAxis label={{ value: 'Nível (cm)', angle: -90, position: 'insideLeft' }} />\n            <Tooltip />\n            <Line type=\"monotone\" dataKey=\"level\" stroke=\"#3b82f6\" dot={{ r: 3 }} />\n          </LineChart>\n        </ResponsiveContainer>\n      )}\n    </div>\n  );\n}\n\nexport default LevelsChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}